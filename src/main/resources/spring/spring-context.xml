<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.2.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!--默认使用h2数据库，可以改为其它数据库 -->
	<context:property-placeholder location="classpath:global.properties" />

	<!-- 加载其它配置文件 -->
	<import resource="classpath:spring/spring-security.xml"/>
	<import resource="classpath:spring/spring-scheduled.xml"/>

	<!-- 将该包下有相关注解的类加载为bean -->
	<context:component-scan base-package="com.network.bird" />

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="${db.driverClassName}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.user}" />
		<property name="password" value="${db.password}" />
		<property name="testWhileIdle" value="false" />
		<property name="maxActive" value="${druid.maxActive}" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="filters" value="${druid.filters}" />
		<property name="connectionProperties" value="${druid.connectionProperties}" />
		<property name="proxyFilters">
			<list>
				<ref bean="druidLogFilter" />
			</list>
		</property>
	</bean>

	<bean id="druidLogFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
		<property name="statementLogEnabled" value="${druid.statementLogEnabled}"/>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.network.bird.core.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
			</props>
		</property>

		<property name="configLocations">
			<list>
				<value>
					classpath:hibernate/hibernate.cfg.xml
				</value>
			</list>
		</property>
	</bean>

	<bean id="txManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:annotation-driven transaction-manager="txManager" />
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED"/>
			<tx:method name="save*" propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"/>
			<tx:method name="delete*" propagation="REQUIRED"/>
			<tx:method name="set*" propagation="REQUIRED"/>
			<tx:method name="get*" propagation="REQUIRED" read-only="true"/>
			<tx:method name="*" propagation="NOT_SUPPORTED"/>
		</tx:attributes>
	</tx:advice>

	<aop:aspectj-autoproxy />

	<!--事务切面注入 * 返回值 * 类名 * 方法名 ..参数-->
	<aop:config>
		<aop:pointcut id="daoPointcut" expression="execution(* com.network.bird.core.dao.impl.*.*(..))" />
		<aop:advisor pointcut-ref="daoPointcut" advice-ref="txAdvice" />
	</aop:config>
	<aop:config>
		<aop:pointcut id="servicePointcut" expression="execution(* com.network.bird.core.service.impl.*.*(..))" />
		<aop:advisor pointcut-ref="servicePointcut" advice-ref="txAdvice"/>
	</aop:config>

	<bean id="poiTool" class="com.network.bird.common.utils.POITool">
		<property name="supportedExtensionsForHtmlConverter">
			<list>
				<value>doc</value>
				<value>docx</value>
			</list>
		</property>
	</bean>


</beans>